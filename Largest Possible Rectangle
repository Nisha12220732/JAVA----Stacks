package Stacks_Questions;

import java.util.Arrays;
import java.util.Stack;

public class LargestPossible_Rectangle {
    public static void main(String[] args) {
        int[] arr = {1,1};
        int[] pse = new int[arr.length];
        int[] nse = new int[arr.length];
        Stack<Integer> st = new Stack<>();
        for(int i=arr.length-1;i>=0;i--){
            while(!st.isEmpty() && arr[st.peek()] >= arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                nse[i] = arr.length;
            }
            else{
                nse[i] = st.peek();
            }
            st.push(i);
        }
        System.out.println();
        System.out.println("Next Smaller Array: ");
        for(int i : nse){
            System.out.print(i + " ");
        }
        while(!st.isEmpty()){
            st.pop();
        }
        for(int i=0;i<arr.length;i++){
            while(!st.isEmpty() && arr[st.peek()] >= arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                pse[i] = -1;
            }
            else{
                pse[i] = st.peek();
            }
            st.push(i);
        }
        System.out.println();
        System.out.println();
        System.out.println("Previous Smaller Array: ");
        for(int i : pse){
            System.out.print(i + " ");
        }
        int[] area = new int[arr.length];
        for(int i =0;i<arr.length;i++){
            area[i] = (nse[i] - pse[i] -1) * arr[i];
        }
        System.out.println();
        System.out.println();
        System.out.println("Area Array: ");
        for(int i : area){
            System.out.print(i + " ");
        }
        System.out.println();
        System.out.println();
        Arrays.sort(area);
        System.out.println("Max Area: " + area[area.length -1]);

    }
}
